<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>wubianluoye</title>
    <link>https://github.com/wubianluoye/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    <atom:link href="%5Bobject%20Object%5D" rel="hub"/>
    <description></description>
    <pubDate>Fri, 01 Dec 2017 09:55:45 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>换电脑怎么更新博客？</title>
      <link>https://github.com/wubianluoye/2017/11/30/%E6%8D%A2%E7%94%B5%E8%84%91%E6%80%8E%E4%B9%88%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%EF%BC%9F/</link>
      <guid>https://github.com/wubianluoye/2017/11/30/%E6%8D%A2%E7%94%B5%E8%84%91%E6%80%8E%E4%B9%88%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%EF%BC%9F/</guid>
      <pubDate>Thu, 30 Nov 2017 10:10:40 GMT</pubDate>
      <description>
      
        &lt;p&gt;其实，Hexo生成的文件里面是有一个.gitignore的，所以它的本意应该也是想我们把这些文件放到GitHub上存放的。&lt;/p&gt;
&lt;p&gt;但是考虑到如果每个GitHub Pages都需要额外的一个仓库存放这些文件，就显得特别冗余了。这个时候就可以用分支的思路！&lt;/p&gt;
&lt;p&gt;一个分支用来存放Hexo生成的网站原始的文件，另一个分支用来存放生成的静态网页。&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>其实，Hexo生成的文件里面是有一个.gitignore的，所以它的本意应该也是想我们把这些文件放到GitHub上存放的。</p><p>但是考虑到如果每个GitHub Pages都需要额外的一个仓库存放这些文件，就显得特别冗余了。这个时候就可以用分支的思路！</p><p>一个分支用来存放Hexo生成的网站原始的文件，另一个分支用来存放生成的静态网页。<br><a id="more"></a><br>最近我也用GitHub Pages搭建了一个独立博客，想到了这个方法，使用之后真的特别简洁。为了更直观地说明，奉上使用这种方法不同时候的流程：</p><p>一、关于搭建的流程</p><ol><li>创建仓库，<a href="http://CrazyMilk.github.io；" target="_blank" rel="noopener">http://CrazyMilk.github.io；</a></li><li>创建两个分支：master 与 hexo；<br>3.设置hexo为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；<br>4.使用git clone git@github.com:CrazyMilk/CrazyMilk.github.io.git拷贝仓库；</li><li>在本地<a href="http://CrazyMilk.github.io文件夹下通过Git" target="_blank" rel="noopener">http://CrazyMilk.github.io文件夹下通过Git</a> bash依次执行npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;</li><li>修改_config.yml中的deploy参数，分支应为master；</li><li>依次执行git add .、git commit -m “…”、git push origin hexo提交网站相关的文件；</li><li>执行hexo g -d生成网站并部署到GitHub上。</li></ol><p>这样一来，在GitHub上的<a href="http://CrazyMilk.github.io仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美(" target="_blank" rel="noopener">http://CrazyMilk.github.io仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美(</a> •̀ ω •́ )y！</p><p>二、关于日常的改动流程在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。</p><ol><li>依次执行git add .、git commit -m “…”、git push origin hexo指令将改动推送到GitHub（此时当前分支应为hexo）；</li><li><ol><li>然后才执行hexo g -d发布网站到master分支上。虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的（例如突然死机要重装了，悲催….的情况，调转顺序就有问题了）。</li></ol></li></ol><p>三、本地资料丢失后的流程当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：</p><ol><li>使用git clone git@github.com:CrazyMilk/CrazyMilk.github.io.git拷贝仓库（默认分支为hexo）；</li><li><ol><li>在本地新拷贝的<a href="http://CrazyMilk.github.io文件夹下通过Git" target="_blank" rel="noopener">http://CrazyMilk.github.io文件夹下通过Git</a> bash依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git（记得，不需要hexo init这条指令）。</li></ol></li></ol><p>以上就是我采用的方法，虽说文字有点多，但是我个人觉得真的挺高效和简洁的。</p><p>更详细的可以参考我刚写的博文：<a href="https://link.zhihu.com/?target=http%3A//crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%25E6%2590%25AD%25E5%25BB%25BA%25E5%258D%259A%25E5%25AE%25A2/%23more" target="_blank" rel="noopener">GitHub Pages + Hexo搭建博客</a>。</p><p>作者：CrazyMilk<br>链接：<a href="https://www.zhihu.com/question/21193762/answer/79109280" target="_blank" rel="noopener">https://www.zhihu.com/question/21193762/answer/79109280</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content:encoded>
      
      <comments>https://github.com/wubianluoye/2017/11/30/%E6%8D%A2%E7%94%B5%E8%84%91%E6%80%8E%E4%B9%88%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%EF%BC%9F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>多设备同步hexo博客</title>
      <link>https://github.com/wubianluoye/2017/11/30/%E5%A4%9A%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5hexo%E5%8D%9A%E5%AE%A2/</link>
      <guid>https://github.com/wubianluoye/2017/11/30/%E5%A4%9A%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5hexo%E5%8D%9A%E5%AE%A2/</guid>
      <pubDate>Thu, 30 Nov 2017 09:25:47 GMT</pubDate>
      <description>
      
        &lt;p&gt;多设备同步hexo搭建的Github博客&lt;/p&gt;
&lt;p&gt;多设备同步&lt;/p&gt;
&lt;p&gt;同步思路与Github推拉源码思路相同，使用git指令，保持本地的博客文件与Github上的博客文件相同即可，其步骤如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;使用hexo搭建部署Github博客
&lt;/code&gt;&lt;/pre&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>多设备同步hexo搭建的Github博客</p><p>多设备同步</p><p>同步思路与Github推拉源码思路相同，使用git指令，保持本地的博客文件与Github上的博客文件相同即可，其步骤如下：</p><pre><code>使用hexo搭建部署Github博客</code></pre><a id="more"></a><pre><code>// 在本地博客根目录下安装hexonpm install hexo// 初始化hexonpm init// 安装依赖npm install// 安装部署相关的配置npm install hexo-deployer-git详情参考[这里](http://www.jianshu.com/p/e99ed60390a8)上传博客工程上一步部署博客到Github以后，我们可以在Github仓库的master分支上看到我们上传的博客文件。Github主分支但是这个博客文件是不包含hexo配置的，所以我们需要新建分支，使用git指令将带hexo配置的Github工程文件上传到新建的分支上。Github上新建分支在本地博客根目录下使用git指令上传项目到Github:// git初始化git init// 添加仓库地址git remote add origin https://github.com/用户名/仓库名.git// 新建分支并切换到新建的分支git checkout -b 分支名// 添加所有本地文件到gitgit add .// git提交git commit -m &quot;&quot;// 文件推送到hexo分支git push origin hexo其他设备上clone下Github上新建的分支的文件到本地在另一台设备上使用git指令下载Github新建分支上的文件:// 克隆文件到本地git clone -b 分支名 https://github.com/用户名/仓库名.git本地写文章在source-&gt;_posts文件夹下新建md文件，并编辑好保存后：QQ截图20161013120208.png部署到Github// 安装hexonpm install hexo// 注意这里不需要hexo初始化：hexo init；否则之前的hexo配置参数会重置// 安装依赖库npm install// 安装部署相关配置npm install hexo-deployer-git同步项目源文件到Github// 添加源文件git add .// git提交git commit -m &quot;&quot;// 先拉原来Github分支上的源文件到本地，进行合并git pull origin 分支名// 比较解决前后版本冲突后，push源文件到Github的分支git push origin 分支名</code></pre><p>至此多设备同步到此为止。<br>问题解决</p><p>由于公司里的电脑是win 10所以在部署博客的过程中会遇到一些问题，整理如下：</p><pre><code>Deployer not found: git在终端执行命令：npm install hexo-deployer-git --save然后继续执行hexo deploye指令进行部署。fatal: could not read Username for ‘ https://github.com ‘: Invalid argument由于使用的是https协议，安全性较高，所以系统终端不允许部署，所以我们该用 ssh，修改本地博客hexo配置文件_config.yml，将repository参数修改如下：repository: ssh://git@github.com/iNerdStack/inerdstack.github.io继续执行hexo deploye指令进行部署。Could not read from remote repository这是因为系统没有添加github的ssh信任到本机，所以我们要在命令行执行：ssh -T git@github.comyes</code></pre><p>参考：<br><a href="https://www.zhihu.com/question/21193762" target="_blank" rel="noopener">【知乎】使用hexo，如果换了电脑怎么更新博客？</a></p>]]></content:encoded>
      
      <comments>https://github.com/wubianluoye/2017/11/30/%E5%A4%9A%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5hexo%E5%8D%9A%E5%AE%A2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Q:你知道如何用line-height使多行文字垂直居中么？</title>
      <link>https://github.com/wubianluoye/2017/11/30/Q-%E4%BD%A0%E7%9F%A5%E9%81%93%E5%A6%82%E4%BD%95%E7%94%A8line-height%E4%BD%BF%E5%A4%9A%E8%A1%8C%E6%96%87%E5%AD%97%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E4%B9%88%EF%BC%9F/</link>
      <guid>https://github.com/wubianluoye/2017/11/30/Q-%E4%BD%A0%E7%9F%A5%E9%81%93%E5%A6%82%E4%BD%95%E7%94%A8line-height%E4%BD%BF%E5%A4%9A%E8%A1%8C%E6%96%87%E5%AD%97%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E4%B9%88%EF%BC%9F/</guid>
      <pubDate>Thu, 30 Nov 2017 01:58:43 GMT</pubDate>
      <description>
      
        &lt;p&gt;我们先看运行效果：&lt;br&gt;line-height实现一行或多行文字垂直居中&lt;/p&gt;
&lt;p&gt;知识点&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>我们先看运行效果：<br>line-height实现一行或多行文字垂直居中</p><p>知识点</p><a id="more"></a><p>line-height（行高） : 指的是两行文字间基线之间的距离，而实际撑开div高度的不是height，而是line-height。</p><p>line box : 每一行称为一条line box，它又是由这一行的许多inline box组成，它的高度可以直接由最大的line-height决定。很多条line box的高度垂直堆叠形成我们见到的div或是p标签之类的父元素高度了。</p><p>无论line box所占据的高度是多少，其占据的空间都是与文字内容公用水平中垂线的。它的垂直居中的性质可以用来实现文字或图片的垂直居中对齐。</p><p>行间距 - 行内框高度 ：行间距是font-size与line-height的差值，被分成两半在内容区的上下行内框高度（替换元素）=内容区宽度行内框高度（非替换元素）=line-height 了解更多替换元素非替换元素的区别点这</p><p>一行文字垂直居中根据知识点3，现在可理解只设置行高后，内容区上下方自动填充行间距，使得文字垂直居中。</p><p><code>&lt;p class=&quot;single_line&quot;&gt;这是一行文字这是一行文字这是一行文字&lt;/p&gt;.single_line{  line-height:150px; border:1px dashed #cccccc; padding-left:5px;font-size:12px;}</code><br>多行文字垂直居中要实现高度不固定的文字垂直居中使用padding就好了。对于高度固定的div，里面文字单行或多行显示，字体有大有小怎么办呢？可以借助于line-height。</p><p><code>&lt;p class=&quot;mulit_line&quot;&gt;    &lt;span style=&quot;font-size:12px;&quot;&gt;这里是高度为150px的标签内的多行文字，文字大小为12像素。        &lt;br&gt;这里是第二行，用来测试多行的显示效果。    &lt;/span&gt;    &lt;i&gt;&amp;nbsp;&lt;/i&gt;&lt;/p&gt;</code></p><p>inline-block属性使得外面包了一层line box。根据知识点2以及内联元素默认基线对齐，给span和i都设置为vertical-align:middle即可。实际应用中可将i的width设为0，案例中1px为了帮助理解用。</p><p><code>.mulit_line{     border:1px dashed #cccccc;     padding-left:5px;}.mulit_line span{     display:inline-block;     line-height:14px;     vertical-align:middle;}.mulit_line i{    width:1px;     display:inline-block;    vertical-align:middle;     font-size:0;    background:red;    line-height:150px;}</code></p><p>看完整代码点这<br>更多内容欢迎互相交流一下。</p><p>作者：Juicyangxj<br>链接：<a href="https://juejin.im/post/5a1cd142f265da431769e042" target="_blank" rel="noopener">https://juejin.im/post/5a1cd142f265da431769e042</a><br>来源：掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content:encoded>
      
      <comments>https://github.com/wubianluoye/2017/11/30/Q-%E4%BD%A0%E7%9F%A5%E9%81%93%E5%A6%82%E4%BD%95%E7%94%A8line-height%E4%BD%BF%E5%A4%9A%E8%A1%8C%E6%96%87%E5%AD%97%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E4%B9%88%EF%BC%9F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hello hexo</title>
      <link>https://github.com/wubianluoye/2017/11/29/hello-world/</link>
      <guid>https://github.com/wubianluoye/2017/11/29/hello-world/</guid>
      <pubDate>Wed, 29 Nov 2017 09:25:47 GMT</pubDate>
      <description>
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      <comments>https://github.com/wubianluoye/2017/11/29/hello-world/#disqus_thread</comments>
    </item>
    
    <item>
      <title>小程序开发遇到的问题</title>
      <link>https://github.com/wubianluoye/2017/11/29/Hello-Hexo/</link>
      <guid>https://github.com/wubianluoye/2017/11/29/Hello-Hexo/</guid>
      <pubDate>Wed, 29 Nov 2017 03:16:01 GMT</pubDate>
      <description>
      
        &lt;p&gt;1、图片问题&lt;/p&gt;
&lt;p&gt;除tapbar外，背景图无法使用本地资源，替代方式是使用base64资源或者外网加载。每个image标签底部有一条透明间隔，非padding，非margin。在图片前面做遮罩层时可能会被坑。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>1、图片问题</p><p>除tapbar外，背景图无法使用本地资源，替代方式是使用base64资源或者外网加载。每个image标签底部有一条透明间隔，非padding，非margin。在图片前面做遮罩层时可能会被坑。</p> <a id="more"></a><p>2、跳转</p><p>小程序页面跳转打开最多五层，超出五层不会跳转了，所以大家要注意，可以在跳转的时候关闭前一个页面。</p><p>3、wxml标签</p><p>wxml的标签跟html里面的一些标签是一样的，就说view标签就相当于div标签，text标签相当于span标签吧，然就是表单元素，这里就要注意了，在微信小程序中，表单元素都是原生组件，微信小程序中原生组件层级最高，所以在用input，canvas，map这些组件就要注意了。其中在样式上不支持overflow-x/overflow-y，只可使用overflow。</p><p>在input标签中会出现placeholder文字位置不固定，可使用使用placeholder-class属性修改placeholder样式。input标签无法设置 font-family; 。对input直接float：left也是不行的，要在input外面套view，然后对其进行浮动。</p><p>scroll-view组件注意事项：1、不要在scroll-view 中使用 textarea、map、canvas、video 组件2、scroll-into-view 的优先级高于 scroll-top。3、在滚动 scroll-view 时会阻止页面回弹，所以在 scroll-view 中滚动，是无法触发 onPullDownRefresh。</p><p>在map组件中只能使用cover-view标签，在cover-view标签下只能使用cover-view以及cover-image标签，这两种标签在样式上的问题非常多，不建议使用，问题1、当使用display:none;做隐藏的时候，其内容文字会出现在屏幕右上角，建议使用 wx:if=”false”或position:absolute;left:-1000rpx;这种方式做隐藏。2、border不支持单边。3、不支持padding的使用，在安卓端会出现padding消失的问题。</p><p>4、动画问题</p><p>在小程序中当有两个元素同时发生变化时，会出现冲突，导致其中一个变化，而另一个不做变化，所以要使用setTimeout方法避免元素同时出现变化。</p><p>5、js问题</p><p>js执行顺序，在开发者工具中执行先执行aap.js然后执行其他js文件，但在手机上app.js和其他js是同时执行的，就比如说你在app.js里面向本地存储一个变量，然后再去index.js里面取这个变量，在开发者工具中是可以取到的，但在手机上它会取不到的。</p>]]></content:encoded>
      
      <comments>https://github.com/wubianluoye/2017/11/29/Hello-Hexo/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
